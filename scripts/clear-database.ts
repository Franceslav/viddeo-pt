import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function clearDatabase() {
  try {
    console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
    
    // –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Å —É—á–µ—Ç–æ–º –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
    
    // 1. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    const deletedCharacterCommentLikes = await prisma.characterCommentLike.deleteMany()
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: ${deletedCharacterCommentLikes.count}`)
    
    // 2. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —ç–ø–∏–∑–æ–¥–æ–≤
    const deletedCommentLikes = await prisma.commentLike.deleteMany()
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: ${deletedCommentLikes.count}`)
    
    // 3. –£–¥–∞–ª—è–µ–º –ª–∞–π–∫–∏ —ç–ø–∏–∑–æ–¥–æ–≤ –∏ –≤–∏–¥–µ–æ
    const deletedEpisodeLikes = await prisma.like.deleteMany()
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –ª–∞–π–∫–æ–≤ —ç–ø–∏–∑–æ–¥–æ–≤/–≤–∏–¥–µ–æ: ${deletedEpisodeLikes.count}`)
    
    // 4. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)
    try {
      const deletedCharacterComments = await prisma.characterComment.deleteMany()
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: ${deletedCharacterComments.count}`)
    } catch (error) {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —á–µ—Ä–µ–∑ Prisma, –Ω–æ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ`)
    }
    
    // 5. –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —ç–ø–∏–∑–æ–¥–æ–≤ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)
    try {
      const deletedComments = await prisma.comment.deleteMany()
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —ç–ø–∏–∑–æ–¥–æ–≤: ${deletedComments.count}`)
    } catch (error) {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —ç–ø–∏–∑–æ–¥–æ–≤ —á–µ—Ä–µ–∑ Prisma, –Ω–æ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ`)
    }
    
    // 8. –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ø–∏–∑–æ–¥—ã
    const deletedEpisodes = await prisma.episode.deleteMany()
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —ç–ø–∏–∑–æ–¥–æ–≤: ${deletedEpisodes.count}`)
    
    // 9. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–µ–∑–æ–Ω—ã
    const deletedSeasons = await prisma.season.deleteMany()
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–µ–∑–æ–Ω–æ–≤: ${deletedSeasons.count}`)
    
    // 10. –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–∏–¥–µ–æ
    const deletedVideos = await prisma.video.deleteMany()
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤–∏–¥–µ–æ: ${deletedVideos.count}`)
    
    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!')
    console.log('üìù –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Å–µ–∑–æ–Ω—ã –∏ —ç–ø–∏–∑–æ–¥—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error)
  } finally {
    await prisma.$disconnect()
  }
}

clearDatabase()
