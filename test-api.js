// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API endpoints
const BASE_URL = 'http://localhost:3000/api'

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...\n')

  // –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ
  console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ...')
  try {
    const videoResponse = await fetch(`${BASE_URL}/videos`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        title: "–ï—â–µ –≤–∏–¥–µ–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ",
        description: "–ï—â–µ –æ–¥–Ω–æ –≤–∏–¥–µ–æ",
        url: "https://res.cloudinary.com/drysqeckp/video/upload/v1758292003/samples/dance-2.mp4",
        userId: "68cd5083cc68d605646fe95e"
      })
    })
    
    const videoResult = await videoResponse.json()
    console.log('‚úÖ –í–∏–¥–µ–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ:', videoResult.success ? 'SUCCESS' : 'FAILED')
    if (!videoResult.success) console.log('‚ùå –û—à–∏–±–∫–∞:', videoResult.error)
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–∏–¥–µ–æ:', error.message)
  }

  // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –≤–∏–¥–µ–æ...')
  try {
    const videosResponse = await fetch(`${BASE_URL}/videos`)
    const videosResult = await videosResponse.json()
    console.log('‚úÖ –í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω—ã:', videosResult.success ? 'SUCCESS' : 'FAILED')
    if (videosResult.success) {
      console.log(`üìπ –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: ${videosResult.videos.length}`)
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞:', videosResult.error)
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∏–¥–µ–æ:', error.message)
  }

  // –¢–µ—Å—Ç 3: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–∞
  console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∑–æ–Ω–∞...')
  try {
    const seasonResponse = await fetch(`${BASE_URL}/seasons`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        title: "–¢–µ—Å—Ç–æ–≤—ã–π —Å–µ–∑–æ–Ω",
        description: "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ–∑–æ–Ω–∞",
        seasonNumber: 1
      })
    })
    
    const seasonResult = await seasonResponse.json()
    console.log('‚úÖ –°–µ–∑–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω:', seasonResult.success ? 'SUCCESS' : 'FAILED')
    if (!seasonResult.success) console.log('‚ùå –û—à–∏–±–∫–∞:', seasonResult.error)
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ–∑–æ–Ω–∞:', error.message)
  }

  // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ–∑–æ–Ω–æ–≤
  console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–µ–∑–æ–Ω–æ–≤...')
  try {
    const seasonsResponse = await fetch(`${BASE_URL}/seasons`)
    const seasonsResult = await seasonsResponse.json()
    console.log('‚úÖ –°–µ–∑–æ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã:', seasonsResult.success ? 'SUCCESS' : 'FAILED')
    if (seasonsResult.success) {
      console.log(`üì∫ –ù–∞–π–¥–µ–Ω–æ —Å–µ–∑–æ–Ω–æ–≤: ${seasonsResult.seasons.length}`)
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞:', seasonsResult.error)
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–µ–∑–æ–Ω–æ–≤:', error.message)
  }

  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testAPI().catch(console.error)
